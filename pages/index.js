import Head from "next/head";
import { useEffect, useState } from "react";
import { useForm, useFieldArray } from "react-hook-form";
import { Entidades } from "../components/Entidades";
import { clienteAxios } from "../helpers/clienteAxios";

import styles from "../styles/Home.module.css";

export default function Home() {
	const [entidadData, setEntidadData] = useState([{
		id: "",
		nombre_entidad: ""
	}]);

	const {
		control,
		register,
		watch,
		formState: { errors },
		handleSubmit,
		getValues
	} = useForm({
		defaultValues: {
			entidades: [
				{
					tipoEntidad: "arl",
					entidad: "",
					fechaAfiliacion: "",
					estadoAfiliacion: "",
					observaciones: "",
				},
				{
					tipoEntidad: "eps",
					entidad: "",
					fechaAfiliacion: "",
					estadoAfiliacion: "",
					observaciones: "",
				},
				{
					tipoEntidad: "fondo de pensiones",
					entidad: "",
					fechaAfiliacion: "",
					estadoAfiliacion: "",
					observaciones: "",
				},
			],
		},
	});
	const onSubmit = (data) => console.log(data);

	const { append, fields, remove } = useFieldArray({
		control,
		name: "entidades",
	});

	const getEntidad = async () => {		
		const entidad = await clienteAxios("/entidades");		
		setEntidadData( entidad.data.data );
	};

	useEffect(() => {
		getEntidad();
	}, []);
	

	return (
		<div className={styles.container}>
			<Head>
				<title>Create Next App</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className={styles.main}>
				<div className="flex flex-col justify-between">
					<form onSubmit={handleSubmit(onSubmit)}>
						<div className="flex flex-col">
							<div className="w-full ">
								<div className="flex flex-col">
									{fields.map((field, index) => {
										return (
											<div
												key={field.id}
												className="flex flex-row mt-2"
											>
												<div className="w-full flex flex-row flex-wrap">
													<div className="w-6/12">
														<div>
															<label htmlFor=""> Tipo entidad </label>
															<br />
															<select
																className="form-select border-2 w-full"
																{...register( `entidades[${index}].tipoEntidad` )}
																disabled
															>
																<option value=""> Selecciona una entidad </option>
																<option value="arl"> Arl </option>
																<option value="eps"> EPS </option>
																<option value="fondo de pensiones"> Fondo de pensiones </option>
															</select>
														</div>
													</div>
													<div className="w-6/12">
														<div>
															<label htmlFor=""> Entidad </label>
															<br />
															<select
																className="form-select border-2 w-full"
																{ ...register( `entidades.[${index}].entidad` ) }
															>
																<option value=""> Selecciona una entidad </option>
																{ 
																	entidadData.filter( item => item.entidad === getValues(`entidades[${index}].tipoEntidad`)  )
																	.map( ( d, index ) => ( <option key={ index } value={ d.id } > { d.nombre_entidad } </option> ) )
																}
															</select>
														</div>
													</div>
													<div className="w-6/12 mt-2">
														<div>
															<label className="text-parrafos"> Fecha afiliaci√≥n </label>
															<br />
															<input
																type="date"
																className="form-control border-2 w-full"
																{ ...register( `entidades[${index}].fechaAfiliacion` ) }
															/>
														</div>
													</div>
													<div className="w-6/12 mt-2">
														<div>
															<label htmlFor=""> Estado afiliacion </label>
															<br />
															<select
																className="form-select border-2 w-full"
																{...register( `entidades[${index}].estadoAfiliacion` ) }
															>
																<option value=""> Selecciona una estado </option>
																<option value="ACTIVO"> Activo </option>
																<option value="INACTIVO"> Inactivo </option>
															</select>
														</div>
													</div>

													<div className="w-full">
														<label htmlFor=""> Observaciones </label>
														<textarea
															rows="1"
															className="w-full border-2"
															{...register( `entidades[${index}].observaciones` ) }
														></textarea>
													</div>
												</div>
												{/* <div className="w-`/12 ml-3">
													<button
														type="button"
														onClick={() => remove(index) }
														className="bg-red-500 px-4 h-full"
													>
														Delete
													</button>
												</div> */}
											</div>
										);
									})}

									{/* <div className="w-full">
										<button
											type="button"
											className="btn block bg-green-500 px-4 h-full w-full ml-4"
											onClick={() => {
												append([
													{
														tipoEntidad: "",
														entidad: "",
														fechaAfiliacion: "",
														estadoAfiliacion: "",
														observaciones: "",
													},
												]);
											}}
										>
											<i className="fas fa-plus"></i>
											agregar entidad
										</button>
									</div> */}
								</div>
							</div>
						</div>

						<div className="flex justify-center items-center">
							<button
								type="submit"
								className="mt-2 bg-red-700 text-white px-12 py-2 w-full rounded-full"
							>
								Guardar
							</button>
						</div>
					</form>
				</div>
			</main>
		</div>
	);
}
